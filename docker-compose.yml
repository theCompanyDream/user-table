networks:
  app-nework:
    driver: bridge

services:
  proxy:
    container_name: ${PROXY_NAME}
    restart: always
    image: nginx:alpine
    depends_on:
      - ${BACKEND_NAME}
      - ${FRONTEND_NAME}
    env_file:
      - .env
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - app-nework
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./configs/nginx/templates:/etc/nginx/templates:rw
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/nginx/proxy.conf:/etc/nginx/proxy.conf
    ports:
      - ${HTTP_PORT}:80

  user_db:
    container_name: ${DATABASE_HOST}
    image: postgres
    networks:
      - app-nework
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      # Beware of special characters in password that can be interpreted by shell
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    restart: unless-stopped

  user_api:
    container_name: ${BACKEND_NAME}
    command: ["go", "run", "main.go"]
    networks:
      - app-nework
    depends_on:
      - ${DATABASE_HOST}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    env_file:
      - .env
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    volumes:
      - ./apps/backend:/opt/app:rw

  user_web:
    container_name: ${FRONTEND_NAME}
    depends_on:
      - ${BACKEND_NAME}
    env_file:
      - .env
    build:
      context: ./apps/frontend/
      dockerfile: Dockerfile
    volumes:
      - ./apps/frontend/src:/opt/app/src
      - ./apps/frontend/public:/opt/app/public
    networks:
      - app-nework

volumes:
  postgres_data: