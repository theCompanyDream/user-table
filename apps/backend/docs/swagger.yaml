definitions:
  models.UserInput:
    properties:
      department:
        description: Department is optional.
        type: string
      email:
        description: Email is required when creating a new user.
        maxLength: 255
        type: string
      first_name:
        description: FirstName is required when creating a new user.
        maxLength: 255
        minLength: 3
        type: string
      id:
        description: |-
          HashId is the public identifier for the user (UUID).
          For create operations, this might be generated internally.
        type: string
      last_name:
        description: LastName is required when creating a new user.
        maxLength: 255
        minLength: 3
        type: string
      user_name:
        description: UserName is required when creating a new user.
        maxLength: 50
        minLength: 5
        type: string
    type: object
  models.UserPaging:
    description: UserDTOPaging
    properties:
      page:
        description: The current page number
        type: integer
      page_count:
        description: The total number of items available
        type: integer
      page_size:
        description: The number of items per page
        type: integer
      users:
        description: A list of users
        items:
          $ref: '#/definitions/models.UserInput'
        type: array
    type: object
info:
  contact: {}
paths:
  /cuid:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: User Created
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Create a user
      tags:
      - user
  /cuid/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user by their ID or username
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      - description: Username
        in: path
        name: user_name
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: User Found
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get a single user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user's information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: User Updated
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Update a user
      tags:
      - user
  /cuids:
    get:
      consumes:
      - application/json
      description: Get a list of users, with optional search, pagination, and limit
      parameters:
      - description: Search Term
        in: query
        name: search
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page Number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Users Found
          schema:
            items:
              $ref: '#/definitions/models.UserPaging'
            type: array
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get multiple users
      tags:
      - user
  /ksuid:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: User Created
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Create a user
      tags:
      - user
  /ksuid/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user by their ID or username
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      - description: Username
        in: path
        name: user_name
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: User Found
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get a single user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user's information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: User Updated
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Update a user
      tags:
      - user
  /ksuids:
    get:
      consumes:
      - application/json
      description: Get a list of users, with optional search, pagination, and limit
      parameters:
      - description: Search Term
        in: query
        name: search
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page Number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Users Found
          schema:
            items:
              $ref: '#/definitions/models.UserPaging'
            type: array
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get multiple users
      tags:
      - user
  /nano:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: User Created
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Create a user
      tags:
      - user
  /nano/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user by their ID or username
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      - description: Username
        in: path
        name: user_name
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: User Found
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get a single user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user's information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: User Updated
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Update a user
      tags:
      - user
  /nanos:
    get:
      consumes:
      - application/json
      description: Get a list of users, with optional search, pagination, and limit
      parameters:
      - description: Search Term
        in: query
        name: search
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page Number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Users Found
          schema:
            items:
              $ref: '#/definitions/models.UserPaging'
            type: array
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get multiple users
      tags:
      - user
  /snow:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: User Created
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Create a user
      tags:
      - user
  /snow/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user by their ID or username
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      - description: Username
        in: path
        name: user_name
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: User Found
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get a single user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user's information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: User Updated
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Update a user
      tags:
      - user
  /snows:
    get:
      consumes:
      - application/json
      description: Get a list of users, with optional search, pagination, and limit
      parameters:
      - description: Search Term
        in: query
        name: search
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page Number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Users Found
          schema:
            items:
              $ref: '#/definitions/models.UserPaging'
            type: array
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get multiple users
      tags:
      - user
  /ulid:
    get:
      consumes:
      - application/json
      description: Get a list of users, with optional search, pagination, and limit
      parameters:
      - description: Search Term
        in: query
        name: search
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page Number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Users Found
          schema:
            items:
              $ref: '#/definitions/models.UserPaging'
            type: array
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get multiple users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: User Created
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Create a user
      tags:
      - user
  /ulid/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user by their ID or username
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      - description: Username
        in: path
        name: user_name
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: User Found
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get a single user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user's information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: User Updated
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Update a user
      tags:
      - user
  /uuid4:
    get:
      consumes:
      - application/json
      description: Get a list of users, with optional search, pagination, and limit
      parameters:
      - description: Search Term
        in: query
        name: search
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page Number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Users Found
          schema:
            items:
              $ref: '#/definitions/models.UserPaging'
            type: array
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get multiple users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: User Created
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Create a user
      tags:
      - user
  /uuid4/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user by their ID or username
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      - description: Username
        in: path
        name: user_name
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: User Found
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Get a single user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user's information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: User Updated
          schema:
            $ref: '#/definitions/models.UserInput'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Update a user
      tags:
      - user
swagger: "2.0"
