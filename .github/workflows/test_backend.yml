name: Backend Tests

on:
  push:
    branches: [ master, develop ]
    paths:
      - 'apps/backend/**'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ master, develop ]
    paths:
      - 'apps/backend/**'

jobs:
  test:
    runs-on: ubuntu-latest

    # Set working directory for all steps
    defaults:
      run:
        working-directory: ./apps/backend

    strategy:
      matrix:
        go-version: [1.21, 1.22]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Run staticcheck
      run: staticcheck ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb?sslmode=disable
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: testdb
        DATABASE_PORT: 5432

    - name: Generate coverage report
      run: go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./apps/backend/coverage.out
        flags: backend
        name: backend-coverage

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-go-${{ matrix.go-version }}
        path: ./apps/backend/coverage.html

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    defaults:
      run:
        working-directory: ./apps/backend

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: integrationdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22

    - name: Download dependencies
      run: go mod download

    - name: Run integration tests
      run: go test -v -tags=integration ./test/integration/...
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/integrationdb?sslmode=disable
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: integrationdb
        DATABASE_PORT: 5432

  benchmark:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    defaults:
      run:
        working-directory: ./apps/backend

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: benchmarkdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22

    - name: Download dependencies
      run: go mod download

    - name: Run benchmarks
      run: go test -bench=. -benchmem -run=^$ ./...
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/benchmarkdb?sslmode=disable
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_NAME: benchmarkdb
        DATABASE_PORT: 5432

    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: ./apps/backend/benchmark.out